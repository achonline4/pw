window.SIDEBAR_ITEMS = {"enum":[["BigEndian","Big-endian byte order."],["LittleEndian","Little-endian byte order."]],"mod":[["big_endian","Numeric primitives stored in big-endian byte order."],["little_endian","Numeric primitives stored in little-endian byte order."],["native_endian","Numeric primitives stored in native-endian byte order."],["network_endian","Numeric primitives stored in network-endian byte order."]],"struct":[["F32","A 32-bit floating point number stored in a given byte order."],["F64","A 64-bit floating point number stored in a given byte order."],["I128","A 128-bit signed integer stored in a given byte order."],["I16","A 16-bit signed integer stored in a given byte order."],["I32","A 32-bit signed integer stored in a given byte order."],["I64","A 64-bit signed integer stored in a given byte order."],["Isize","A word-sized signed integer stored in a given byte order."],["U128","A 128-bit unsigned integer stored in a given byte order."],["U16","A 16-bit unsigned integer stored in a given byte order."],["U32","A 32-bit unsigned integer stored in a given byte order."],["U64","A 64-bit unsigned integer stored in a given byte order."],["Usize","A word-sized unsigned integer stored in a given byte order."]],"trait":[["ByteOrder","A type-level representation of byte order."]],"type":[["BE","A type alias for [`BigEndian`]."],["LE","A type alias for [`LittleEndian`]."],["NativeEndian","The endianness used by this platform."],["NetworkEndian","The endianness used in many network protocols."]]};